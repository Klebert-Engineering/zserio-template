
/**
 * Automatically generated by Zserio C++ extension version 1.2.0.
 */

#ifndef HOST_MAP_LIST_H
#define HOST_MAP_LIST_H

#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/BitFieldUtil.h>
#include <zserio/CppRuntimeException.h>
#include <zserio/StringConvertUtil.h>
#include <zserio/PreWriteAction.h>
#include <zserio/ObjectArray.h>

#include "host/Map.h"

namespace host
{
template <class T,class V>
class MapList
{
public:
    MapList();
    explicit MapList(zserio::BitStreamReader& _in);

    void initializeChildren();

    zserio::ObjectArray<host::Map<T,V> >& getMaps();
    const zserio::ObjectArray<host::Map<T,V> >& getMaps() const;
    void setMaps(const zserio::ObjectArray<host::Map<T,V> >& maps);

    size_t bitSizeOf(size_t _bitPosition = 0) const;
    size_t initializeOffsets(size_t _bitPosition);

    bool operator==(const MapList& other) const;
    int hashCode() const;

    void read(zserio::BitStreamReader& _in);
    void write(zserio::BitStreamWriter& _out,
            zserio::PreWriteAction _preWriteAction = zserio::ALL_PRE_WRITE_ACTIONS);

private:

    zserio::ObjectArray<host::Map<T,V> > m_maps;
};

} // namespace host

#include "MapList.cpp"

#endif // HOST_MAP_LIST_H
