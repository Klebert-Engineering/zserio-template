/**
 * Automatically generated by Zserio C++ extension version 1.1.0.
 */

#ifndef EXT_EXT_H
#define EXT_EXT_H

#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/BitFieldUtil.h>
#include <zserio/CppRuntimeException.h>
#include <zserio/StringConvertUtil.h>
#include <zserio/PreWriteAction.h>
#include <zserio/OptionalHolder.h>

#include "host/Map.h"

#include "Type.h";
#include "Value.h";

namespace ext
{

class Ext
{
public:
    Ext();
    Ext(zserio::BitStreamReader& _in);

	host::Map<Type, Value>& getMap1() { return m_map1;  };
	//const host::Map<Type, Value>& getMap1() { return m_map1; } const;
	void setMap1(const host::Map<Type, Value>& map1) { m_map1 = map1; };

    size_t bitSizeOf(size_t _bitPosition = 0);
    size_t initializeOffsets(size_t _bitPosition);

    bool operator==(const Ext& other) const;
    int hashCode() const;

    void read(zserio::BitStreamReader& _in);
    void write(zserio::BitStreamWriter& _out,
            zserio::PreWriteAction _preWriteAction = zserio::ALL_PRE_WRITE_ACTIONS);

private:

    host::Map<Type, Value> m_map1;
};

} // namespace ext

#endif // EXT_EXT_H
